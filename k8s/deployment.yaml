apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  labels:
    app: flask_app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask_app
  template:
      metadata:
        labels:
          app: flask_app
      spec:
        containers:
          - name: flask-app
            image: sirishkumar/flask_app:v2
            env:
              - name: DB_SERVICE
                value: dbservice
            ports:
              - name: app
                containerPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: mysql-database
          image: mysql:5.7.33
          args:
            - "--ignore-db-dir"
            - "lost+found"
          ports:
            - name: db
              containerPort: 3306
          env:
          - name: MYSQL_DATABASE
            valueFrom:
              configMapKeyRef:
                name: db-config
                key: MYSQL_DATABASE
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: MYSQL_USER
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: MYSQL_PASSWORD
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: MYSQL_ROOT_PASSWORD
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: db-storage
      volumes:
        - name: db-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - name: db-config
          

